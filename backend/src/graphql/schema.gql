# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateRoomInput {
  description: String!
  limit: Int
  ownerMember: String!
  roomType: Roomtype!
  tags: [String!]!
  title: String!
}

input CreateTagInput {
  tag: String!
}

input CreateUserInput {
  email: String!
  password: String!
  passwordConfirm: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  CreateRoom(createRoomInput: CreateRoomInput!): Room!
  CreateTag(tag: String!): Tag!
  CreateTags(tags: [CreateTagInput!]!): [Tag!]!
  SendEmailVerificationCode(email: String!): Boolean!
  SignUp(createUserInput: CreateUserInput!): User!
  VerifyEmailCode(code: String!, email: String!): Boolean!
  updateRoom(updateRoomInput: UpdateRoomInput!): Room!
}

type Query {
  GetRoom(id: String!): Room!
  GetRooms: [Room!]!
  GetTags: [Tag!]!
  SearchRoom(searchRoomInput: SearchRoomInput!): [Room!]!
  SignIn(signUserInput: SignUserInput!): UserSignin!
}

type Room {
  createdAt: DateTime!
  description: String!
  id: String!
  limit: Int
  memebers: [UserRoomMember!]
  ownerMember: UserRoomMember!
  roomType: Roomtype!
  tags: [String!]!
  title: String!
}

"""
A Scalar Type for Roomtype and must be either "public" or "private"
"""
scalar Roomtype

input SearchRoomInput {
  roomType: String
  searchQuery: String
  tags: [String!] = []
}

input SignUserInput {
  identifier: String!
  password: String!
}

type Tag {
  id: String!
  tag: String!
}

input UpdateRoomInput {
  description: String
  id: String!
  limit: Int
  memebers: [String!]
  roomType: Roomtype
  tags: [String!]
  title: String
}

type User {
  avatar: String!
  email: String!
  id: String!
  isEmailVerified: Boolean!
  joinedAt: DateTime!
  password: String!
  username: String!
}

type UserRoomMember {
  avatar: String!
  id: String!
  joinedAt: DateTime!
  username: String!
}

type UserSignWithoutPassword {
  avatar: String!
  email: String!
  id: String!
  isEmailVerified: Boolean!
  joinedAt: DateTime!
  username: String!
}

type UserSignin {
  token: String
  user: UserSignWithoutPassword!
}